/* tslint:disable */
/* eslint-disable */
/**
 * This file was automatically generated by Payload.
 * DO NOT MODIFY IT BY HAND. Instead, modify your source Payload config,
 * and re-run `payload generate:types` to regenerate this file.
 */

/**
 * Supported timezones in IANA format.
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "supportedTimezones".
 */
export type SupportedTimezones =
  | 'Pacific/Midway'
  | 'Pacific/Niue'
  | 'Pacific/Honolulu'
  | 'Pacific/Rarotonga'
  | 'America/Anchorage'
  | 'Pacific/Gambier'
  | 'America/Los_Angeles'
  | 'America/Tijuana'
  | 'America/Denver'
  | 'America/Phoenix'
  | 'America/Chicago'
  | 'America/Guatemala'
  | 'America/New_York'
  | 'America/Bogota'
  | 'America/Caracas'
  | 'America/Santiago'
  | 'America/Buenos_Aires'
  | 'America/Sao_Paulo'
  | 'Atlantic/South_Georgia'
  | 'Atlantic/Azores'
  | 'Atlantic/Cape_Verde'
  | 'Europe/London'
  | 'Europe/Berlin'
  | 'Africa/Lagos'
  | 'Europe/Athens'
  | 'Africa/Cairo'
  | 'Europe/Moscow'
  | 'Asia/Riyadh'
  | 'Asia/Dubai'
  | 'Asia/Baku'
  | 'Asia/Karachi'
  | 'Asia/Tashkent'
  | 'Asia/Calcutta'
  | 'Asia/Dhaka'
  | 'Asia/Almaty'
  | 'Asia/Jakarta'
  | 'Asia/Bangkok'
  | 'Asia/Shanghai'
  | 'Asia/Singapore'
  | 'Asia/Tokyo'
  | 'Asia/Seoul'
  | 'Australia/Brisbane'
  | 'Australia/Sydney'
  | 'Pacific/Guam'
  | 'Pacific/Noumea'
  | 'Pacific/Auckland'
  | 'Pacific/Fiji';

export interface Config {
  auth: {
    users: UserAuthOperations;
  };
  blocks: {};
  collections: {
    users: User;
    media: Media;
    vehicles: Vehicle;
    variants: Variant;
    colors: Color;
    components: Component;
    pricing: Pricing;
    dealers: Dealer;
    bookings: Booking;
    posts: Post;
    categories: Category;
    tags: Tag;
    'legal-pages': LegalPage;
    'payload-locked-documents': PayloadLockedDocument;
    'payload-preferences': PayloadPreference;
    'payload-migrations': PayloadMigration;
  };
  collectionsJoins: {};
  collectionsSelect: {
    users: UsersSelect<false> | UsersSelect<true>;
    media: MediaSelect<false> | MediaSelect<true>;
    vehicles: VehiclesSelect<false> | VehiclesSelect<true>;
    variants: VariantsSelect<false> | VariantsSelect<true>;
    colors: ColorsSelect<false> | ColorsSelect<true>;
    components: ComponentsSelect<false> | ComponentsSelect<true>;
    pricing: PricingSelect<false> | PricingSelect<true>;
    dealers: DealersSelect<false> | DealersSelect<true>;
    bookings: BookingsSelect<false> | BookingsSelect<true>;
    posts: PostsSelect<false> | PostsSelect<true>;
    categories: CategoriesSelect<false> | CategoriesSelect<true>;
    tags: TagsSelect<false> | TagsSelect<true>;
    'legal-pages': LegalPagesSelect<false> | LegalPagesSelect<true>;
    'payload-locked-documents': PayloadLockedDocumentsSelect<false> | PayloadLockedDocumentsSelect<true>;
    'payload-preferences': PayloadPreferencesSelect<false> | PayloadPreferencesSelect<true>;
    'payload-migrations': PayloadMigrationsSelect<false> | PayloadMigrationsSelect<true>;
  };
  db: {
    defaultIDType: number;
  };
  globals: {};
  globalsSelect: {};
  locale: null;
  user: User & {
    collection: 'users';
  };
  jobs: {
    tasks: unknown;
    workflows: unknown;
  };
}
export interface UserAuthOperations {
  forgotPassword: {
    email: string;
    password: string;
  };
  login: {
    email: string;
    password: string;
  };
  registerFirstUser: {
    email: string;
    password: string;
  };
  unlock: {
    email: string;
    password: string;
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users".
 */
export interface User {
  id: number;
  name: string;
  roles?: ('admin' | 'editor' | 'public')[] | null;
  updatedAt: string;
  createdAt: string;
  email: string;
  resetPasswordToken?: string | null;
  resetPasswordExpiration?: string | null;
  salt?: string | null;
  hash?: string | null;
  loginAttempts?: number | null;
  lockUntil?: string | null;
  password?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media".
 */
export interface Media {
  id: number;
  alt: string;
  updatedAt: string;
  createdAt: string;
  url?: string | null;
  thumbnailURL?: string | null;
  filename?: string | null;
  mimeType?: string | null;
  filesize?: number | null;
  width?: number | null;
  height?: number | null;
  focalX?: number | null;
  focalY?: number | null;
  sizes?: {
    thumbnail?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    card?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    tablet?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    feature?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
  };
}
/**
 * Manage base vehicle models.
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "vehicles".
 */
export interface Vehicle {
  id: number;
  name: string;
  model_code: string;
  description?: string | null;
  image: number | Media;
  updatedAt: string;
  createdAt: string;
}
/**
 * Define variants for each vehicle model.
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "variants".
 */
export interface Variant {
  id: number;
  model: number | Vehicle;
  code: string;
  title: string;
  subtitle?: string | null;
  description?: string | null;
  /**
   * Amount added to the base vehicle price for this variant (in smallest currency unit, e.g., paise).
   */
  price_addition: number;
  battery_capacity?: number | null;
  range_km?: number | null;
  /**
   * Is this the default variant selected when the model is chosen?
   */
  is_default?: boolean | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * Define available colors for each vehicle model.
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "colors".
 */
export interface Color {
  id: number;
  model: number | Vehicle;
  name: string;
  /**
   * Enter hex code (e.g., #FF0000) or JSON like {"colorStart":"#HEX", "colorEnd":"#HEX"} for gradients.
   */
  color_value: string;
  is_default?: boolean | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * Manage optional/required components, accessories, packages, etc.
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "components".
 */
export interface Component {
  id: number;
  model: number | Vehicle;
  component_type: 'ACCESSORY' | 'PACKAGE' | 'WARRANTY' | 'SERVICE' | 'INSURANCE' | 'FINANCE';
  code?: string | null;
  title: string;
  subtitle?: string | null;
  description?: string | null;
  price: number;
  /**
   * If checked, this component will be automatically included and cannot be removed.
   */
  is_required?: boolean | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * Define base pricing rules for vehicles based on location.
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "pricing".
 */
export interface Pricing {
  id: number;
  model: number | Vehicle;
  state: string;
  /**
   * Leave blank if price applies to the entire state (unless overridden by pincode).
   */
  city?: string | null;
  /**
   * Enter the 6-digit starting pincode for this price rule.
   */
  pincode_start: number;
  /**
   * Enter the 6-digit ending pincode for this price rule.
   */
  pincode_end: number;
  base_price: number;
  fulfillment_fee?: number | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * Manage dealership locations, contact info, and services.
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "dealers".
 */
export interface Dealer {
  id: number;
  name: string;
  address: {
    line1?: string | null;
    line2?: string | null;
    city: string;
    state: string;
    pincode: string;
    country?: string | null;
  };
  /**
   * @minItems 2
   * @maxItems 2
   */
  coordinates?: [number, number] | null;
  contact?: {
    phone?: string | null;
    email?: string | null;
    website?: string | null;
  };
  hours?:
    | {
        day: 'Monday' | 'Tuesday' | 'Wednesday' | 'Thursday' | 'Friday' | 'Saturday' | 'Sunday';
        open?: string | null;
        close?: string | null;
        id?: string | null;
      }[]
    | null;
  services?: ('sales' | 'service' | 'charging' | 'test_rides')[] | null;
  active?: boolean | null;
  featured?: boolean | null;
  imageUrl?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * Customer vehicle booking records.
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "bookings".
 */
export interface Booking {
  id: number;
  bookingId: string;
  razorpayOrderId?: string | null;
  razorpayPaymentId?: string | null;
  customerInfo: {
    fullName: string;
    email: string;
    phone: string;
  };
  deliveryLocation?: {
    formatted?: string | null;
    pincode?: string | null;
    city?: string | null;
    state?: string | null;
  };
  vehicleConfig: {
    vehicle: number | Vehicle;
    variant: number | Variant;
    color: number | Color;
    components?: (number | Component)[] | null;
    vehicleSummary?: string | null;
  };
  totalAmount: number;
  bookingStatus: 'pending_payment' | 'confirmed' | 'processing' | 'cancelled' | 'failed';
  paymentStatus: 'pending' | 'success' | 'failed';
  notes?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * Blog posts content.
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "posts".
 */
export interface Post {
  id: number;
  title: string;
  /**
   * A unique identifier used in the URL. Usually generated automatically.
   */
  slug: string;
  featuredImage: number | Media;
  content: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  };
  /**
   * A short summary used for previews and SEO.
   */
  excerpt?: string | null;
  author: number | User;
  category: number | Category;
  tags?: (number | Tag)[] | null;
  status: 'draft' | 'published';
  /**
   * Post will not be public until this date (if status is published).
   */
  publishedDate?: string | null;
  meta?: {
    /**
     * Leave blank to use post title.
     */
    title?: string | null;
    /**
     * Leave blank to use excerpt.
     */
    description?: string | null;
  };
  updatedAt: string;
  createdAt: string;
  _status?: ('draft' | 'published') | null;
}
/**
 * Organize blog posts into categories.
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "categories".
 */
export interface Category {
  id: number;
  name: string;
  /**
   * A unique identifier used in the URL. Usually generated automatically.
   */
  slug: string;
  updatedAt: string;
  createdAt: string;
}
/**
 * Add descriptive tags to blog posts for filtering.
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "tags".
 */
export interface Tag {
  id: number;
  name: string;
  /**
   * A unique identifier used in the URL. Usually generated automatically.
   */
  slug: string;
  updatedAt: string;
  createdAt: string;
}
/**
 * Content for legal documents like Privacy Policy, Terms of Service.
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "legal-pages".
 */
export interface LegalPage {
  id: number;
  title: string;
  /**
   * A unique identifier used in the URL. Usually generated automatically.
   */
  slug: string;
  content: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  };
  status?: ('draft' | 'published') | null;
  updatedAt: string;
  createdAt: string;
  _status?: ('draft' | 'published') | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents".
 */
export interface PayloadLockedDocument {
  id: number;
  document?:
    | ({
        relationTo: 'users';
        value: number | User;
      } | null)
    | ({
        relationTo: 'media';
        value: number | Media;
      } | null)
    | ({
        relationTo: 'vehicles';
        value: number | Vehicle;
      } | null)
    | ({
        relationTo: 'variants';
        value: number | Variant;
      } | null)
    | ({
        relationTo: 'colors';
        value: number | Color;
      } | null)
    | ({
        relationTo: 'components';
        value: number | Component;
      } | null)
    | ({
        relationTo: 'pricing';
        value: number | Pricing;
      } | null)
    | ({
        relationTo: 'dealers';
        value: number | Dealer;
      } | null)
    | ({
        relationTo: 'bookings';
        value: number | Booking;
      } | null)
    | ({
        relationTo: 'posts';
        value: number | Post;
      } | null)
    | ({
        relationTo: 'categories';
        value: number | Category;
      } | null)
    | ({
        relationTo: 'tags';
        value: number | Tag;
      } | null)
    | ({
        relationTo: 'legal-pages';
        value: number | LegalPage;
      } | null);
  globalSlug?: string | null;
  user: {
    relationTo: 'users';
    value: number | User;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences".
 */
export interface PayloadPreference {
  id: number;
  user: {
    relationTo: 'users';
    value: number | User;
  };
  key?: string | null;
  value?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations".
 */
export interface PayloadMigration {
  id: number;
  name?: string | null;
  batch?: number | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users_select".
 */
export interface UsersSelect<T extends boolean = true> {
  name?: T;
  roles?: T;
  updatedAt?: T;
  createdAt?: T;
  email?: T;
  resetPasswordToken?: T;
  resetPasswordExpiration?: T;
  salt?: T;
  hash?: T;
  loginAttempts?: T;
  lockUntil?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media_select".
 */
export interface MediaSelect<T extends boolean = true> {
  alt?: T;
  updatedAt?: T;
  createdAt?: T;
  url?: T;
  thumbnailURL?: T;
  filename?: T;
  mimeType?: T;
  filesize?: T;
  width?: T;
  height?: T;
  focalX?: T;
  focalY?: T;
  sizes?:
    | T
    | {
        thumbnail?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
        card?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
        tablet?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
        feature?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
      };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "vehicles_select".
 */
export interface VehiclesSelect<T extends boolean = true> {
  name?: T;
  model_code?: T;
  description?: T;
  image?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "variants_select".
 */
export interface VariantsSelect<T extends boolean = true> {
  model?: T;
  code?: T;
  title?: T;
  subtitle?: T;
  description?: T;
  price_addition?: T;
  battery_capacity?: T;
  range_km?: T;
  is_default?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "colors_select".
 */
export interface ColorsSelect<T extends boolean = true> {
  model?: T;
  name?: T;
  color_value?: T;
  is_default?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "components_select".
 */
export interface ComponentsSelect<T extends boolean = true> {
  model?: T;
  component_type?: T;
  code?: T;
  title?: T;
  subtitle?: T;
  description?: T;
  price?: T;
  is_required?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "pricing_select".
 */
export interface PricingSelect<T extends boolean = true> {
  model?: T;
  state?: T;
  city?: T;
  pincode_start?: T;
  pincode_end?: T;
  base_price?: T;
  fulfillment_fee?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "dealers_select".
 */
export interface DealersSelect<T extends boolean = true> {
  name?: T;
  address?:
    | T
    | {
        line1?: T;
        line2?: T;
        city?: T;
        state?: T;
        pincode?: T;
        country?: T;
      };
  coordinates?: T;
  contact?:
    | T
    | {
        phone?: T;
        email?: T;
        website?: T;
      };
  hours?:
    | T
    | {
        day?: T;
        open?: T;
        close?: T;
        id?: T;
      };
  services?: T;
  active?: T;
  featured?: T;
  imageUrl?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "bookings_select".
 */
export interface BookingsSelect<T extends boolean = true> {
  bookingId?: T;
  razorpayOrderId?: T;
  razorpayPaymentId?: T;
  customerInfo?:
    | T
    | {
        fullName?: T;
        email?: T;
        phone?: T;
      };
  deliveryLocation?:
    | T
    | {
        formatted?: T;
        pincode?: T;
        city?: T;
        state?: T;
      };
  vehicleConfig?:
    | T
    | {
        vehicle?: T;
        variant?: T;
        color?: T;
        components?: T;
        vehicleSummary?: T;
      };
  totalAmount?: T;
  bookingStatus?: T;
  paymentStatus?: T;
  notes?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "posts_select".
 */
export interface PostsSelect<T extends boolean = true> {
  title?: T;
  slug?: T;
  featuredImage?: T;
  content?: T;
  excerpt?: T;
  author?: T;
  category?: T;
  tags?: T;
  status?: T;
  publishedDate?: T;
  meta?:
    | T
    | {
        title?: T;
        description?: T;
      };
  updatedAt?: T;
  createdAt?: T;
  _status?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "categories_select".
 */
export interface CategoriesSelect<T extends boolean = true> {
  name?: T;
  slug?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "tags_select".
 */
export interface TagsSelect<T extends boolean = true> {
  name?: T;
  slug?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "legal-pages_select".
 */
export interface LegalPagesSelect<T extends boolean = true> {
  title?: T;
  slug?: T;
  content?: T;
  status?: T;
  updatedAt?: T;
  createdAt?: T;
  _status?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents_select".
 */
export interface PayloadLockedDocumentsSelect<T extends boolean = true> {
  document?: T;
  globalSlug?: T;
  user?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences_select".
 */
export interface PayloadPreferencesSelect<T extends boolean = true> {
  user?: T;
  key?: T;
  value?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations_select".
 */
export interface PayloadMigrationsSelect<T extends boolean = true> {
  name?: T;
  batch?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "auth".
 */
export interface Auth {
  [k: string]: unknown;
}


declare module 'payload' {
  export interface GeneratedTypes extends Config {}
}